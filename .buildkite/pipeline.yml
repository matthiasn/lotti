steps:
  - label: "🍏💻🧽🛠🔬 Clean, build, test"
    key: "clean_test"
    command:
    - "make clean_test"
    - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "macOS"
    artifact_paths:
      - "missing_translations.txt"

  - label: "🍏📱🛠 iOS Build "
    key: "ios_build"
    depends_on:
      - "clean_test"
    command:
    - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
    - "make ios_build_ipa"
    - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "macOS"

  - label: "🍏📱👟 iOS fastlane build "
    key: "ios_fastlane_build"
    depends_on:
      - "ios_build"
    command:
    - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
    - "make ios_fastlane_build"
    - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "macOS"

  - label: "🍏📱🚀 iOS fastlane TestFlight upload "
    key: "ios_fastlane_testflight"
    depends_on:
      - "ios_fastlane_build"
    command:
    - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
    - "make ios_fastlane_upload"
    agents:
      os: "macOS"

  - label: "🍏💻🛠 macOS Build "
    key: "macos_build"
    depends_on:
      - "clean_test"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "make macos_build_flutter"
      - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "macOS"

  - label: "🍏💻👟 macOS fastlane build "
    key: "macos_fastlane_build"
    depends_on:
      - "macos_build"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "make macos_fastlane_build"
      - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "macOS"

  - label: "🍏💻🚀 macOS fastlane TestFlight upload "
    key: "macos_fastlane_testflight"
    depends_on:
      - "macos_fastlane_build"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "make macos_fastlane_upload"
    agents:
      os: "macOS"

  - label: "🍏💻🚀 macOS fastlane Export "
    key: "macos_fastlane_export"
    depends_on:
      - "macos_build"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "make macos_fastlane_export"
      - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    artifact_paths:
      - "build/export/Lotti.app"
    agents:
      os: "macOS"

  - label: "🍏💻💾 macOS create DMG file "
    key: "macos_dmg"
    depends_on:
      - "macos_fastlane_export"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "npx create-dmg build/export/Lotti.app build/export/"
      - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "macOS"

  - label: "🍏💻⚖️ macOS notarize DMG file "
    key: "macos_notarize"
    depends_on:
      - "macos_dmg"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "xcrun altool --notarize-app -f build/export/*.dmg --primary-bundle-id com.matthiasnehlsen.lotti -u $$APPLEID -p $$APPLEIDPASS"
    agents:
      os: "macOS"

  - label: "🍏💻🐧🚀 Create GitHub Prerelease "
    key: "create_github_prerelease"
    command:
      - "gh release create -p -d --generate-notes --target $$BUILDKITE_COMMIT $$BUILDKITE_BRANCH"

  - label: "🍏💻🚀 macOS publish GitHub Prerelease "
    key: "macos_github_prerelease"
    depends_on:
      - "create_github_prerelease"
      - "macos_notarize"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "gh release upload $$BUILDKITE_BRANCH build/export/*.dmg"
    agents:
      os: "macOS"

  - label: "🐧🧽🛠🔬 Clean, build, test "
    key: "linux_clean_test"
    command:
      - "make clean_test"
      - "mkdir -p /tmp/buildkite/$$BUILDKITE_COMMIT/"
      - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "linux"

  - label: "🐧💻🛠 Linux Build "
    key: "linux_build"
    depends_on:
      - "linux_clean_test"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "make linux_build"
      - "tar cfvz build/linux.x64.tar.gz build/linux"
      - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "linux"

  - label: "🐧💻🚀 Linux publish GitHub prerelease "
    key: "linux_github_prerelease"
    depends_on:
      - "create_github_prerelease"
      - "linux_build"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "gh release upload $$BUILDKITE_BRANCH build/linux.x64.tar.gz"
    agents:
      os: "linux"

  - label: "🐧📱🛠 Android Bundle "
    key: "android_bundle"
    depends_on:
      - "clean_test"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "flutter build appbundle"
      - "rsync -ar ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "macOS"

  - label: "🐧📱🛠 Android create APKs "
    key: "android_apks"
    depends_on:
      - "android_bundle"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "bundletool build-apks --bundle build/app/outputs/bundle/release/app-release.aab --output build/android/lotti.apks --overwrite"
      - "rsync -ar --exclude 'build/ios' --exclude 'build/macos' ./ /tmp/buildkite/$$BUILDKITE_COMMIT/"
    agents:
      os: "macOS"

  - label: "🐧💻🚀 Android publish GitHub Prerelease "
    key: "android_github_prerelease"
    depends_on:
      - "create_github_prerelease"
      - "android_apks"
    command:
      - "rsync -ar /tmp/buildkite/$$BUILDKITE_COMMIT/ ./"
      - "gh release upload $$BUILDKITE_BRANCH build/app/outputs/bundle/release/app-release.aab"
    agents:
      os: "macOS"
