name: Mac
on: [push]

jobs:
  build:
    name: Build & Release macOS
    runs-on: macOS-latest
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Retrieve certificate
        run: echo "$DEV_CERT" | base64 -D > Certificates.p12
        env:
          DEV_CERT: ${{ secrets.DEV_CERT }}
      - name: Set up keychain
        run: |
          security create-keychain -p ${{ secrets.KEYCHAIN_PW }} build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p ${{ secrets.KEYCHAIN_PW }} build.keychain
          security import Certificates.p12 -k ~/Library/Keychains/build.keychain -P ${{ secrets.DEV_CERT_PW }} -A
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k ${{ secrets.KEYCHAIN_PW }} build.keychain
        env:
          DEV_CERT: ${{ secrets.DEV_CERT }}
          DEV_CERT_PW: ${{ secrets.DEV_CERT_PW }}
          KEYCHAIN_PW: ${{ secrets.KEYCHAIN_PW }}
      - name: List identities
        run: security find-identity -v
      - name: Prepare java
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Install leiningen
        uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.1
      - name: Check leiningen version
        run: lein -v
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Setup build dependencies
        run: make deps-mac
      - name: Release
        run: make release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          CSC_LINK: Certificates.p12
          CSC_KEY_PASSWORD: ${{ secrets.DEV_CERT_PW }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
