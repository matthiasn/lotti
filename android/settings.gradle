pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
        if (localPropertiesFile.exists()) {
            localPropertiesFile.withReader("UTF-8") { reader -> properties.load(reader) }
        }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }()

    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "8.9.1" apply false
    id "org.jetbrains.kotlin.android" version "1.9.22" apply false
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)
    repositories {
        google()
        mavenCentral()
        maven {
            url "$flutterSdkPath/bin/cache/artifacts/engine/android-arm"
        }
        maven {
            url "$flutterSdkPath/bin/cache/artifacts/engine/android-arm64"
        }
        maven {
            url "$flutterSdkPath/bin/cache/artifacts/engine/android-x64"
        }
        maven {
            url "$flutterSdkPath/bin/cache/artifacts/engine/android-x86"
        }
    }
}

include ":app"
