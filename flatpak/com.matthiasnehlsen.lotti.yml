app-id: com.matthiasnehlsen.lotti
runtime: org.gnome.Platform
runtime-version: '45'
sdk: org.gnome.Sdk
modules:
  - name: setup
    buildsystem: simple
    build-commands:
      - mkdir -p /app/lib
      - mkdir -p /app/share/applications
      - mkdir -p /app/share/metainfo
      - mkdir -p /app/share/icons/hicolor/apps
  - name: desktop-drop-plugin
    buildsystem: simple
    build-commands:
      - install -D libdesktop_drop_plugin.so /app/lib/
    sources:
      - type: file
        path: ../lib/libdesktop_drop_plugin.so

  - name: lotti
    buildsystem: simple
    build-options:
      strip: true
      no-debuginfo: true
    build-commands:
      - echo "Installing complete Flutter bundle structure..."
      - ls -la
      - echo "Checking bundle contents:"
      - ls -la bundle/ 2>/dev/null || echo "No bundle directory"
      - ls -la bundle/lib/ 2>/dev/null || echo "No bundle/lib directory"
      - echo "Copying bundle structure to /app/:"
      - cp -r bundle/* /app/ 2>/dev/null || echo "Failed to copy bundle structure"
      - echo "Checking what was copied to /app/:"
      - ls -la /app/
      - echo "Checking if lotti executable was copied:"
      - ls -la /app/lotti 2>/dev/null || echo "lotti executable not found in /app/"
      - echo "Checking lib directory:"
      - ls -la /app/lib/ 2>/dev/null || echo "No lib directory"
      - echo "Checking data directory:"
      - ls -la /app/data/ 2>/dev/null || echo "No data directory"
      - echo "Creating comprehensive libkeybinder stub with all required symbols..."
      - |
        cat > stub_keybinder.c << 'EOF'
        #include <stddef.h>
        
        // GLib symbols that may be needed
        void g_once_init_enter_pointer(void* location) {}
        void g_once_init_leave(void* location, void* result) {}
        void g_once_init_enter(void* location) {}
        void g_once_init_leave_pointer(void* location, void* result) {}
        
        // Keybinder symbols
        void keybinder_init(void) {}
        void keybinder_bind(const char* keystring, void* handler, void* user_data) {}
        void keybinder_unbind(const char* keystring, void* handler) {}
        void keybinder_bind_full(const char* keystring, void* handler, void* user_data, void* notify, void* data) {}
        
        // Additional GLib symbols that might be needed
        void g_free(void* mem) {}
        void* g_malloc(size_t n_bytes) { return 0; }
        void* g_malloc0(size_t n_bytes) { return 0; }
        void g_log(const char* log_domain, int log_level, const char* format, ...) {}
        EOF
        
        gcc -shared -fPIC -o /app/lib/libkeybinder-3.0.so.0 stub_keybinder.c 2>/dev/null || echo "Failed to create comprehensive stub"
        rm -f stub_keybinder.c
        echo "Comprehensive stub created:"
        ls -la /app/lib/libkeybinder-3.0.so.0 2>/dev/null || echo "Stub creation failed"
      - echo "Creating wrapper script..."
      - echo '#!/bin/bash' > /app/lotti-wrapper
      - echo 'export LD_LIBRARY_PATH=/app/lib:$LD_LIBRARY_PATH' >> /app/lotti-wrapper
      - echo 'echo "Wrapper script running with LD_LIBRARY_PATH=$LD_LIBRARY_PATH"' >> /app/lotti-wrapper
      - echo 'ls -la /app/lib/ 2>/dev/null || echo "No lib directory"' >> /app/lotti-wrapper
      - echo 'exec /app/lotti "$@"' >> /app/lotti-wrapper
      - chmod +x /app/lotti-wrapper
      - echo "Wrapper script created:"
      - cat /app/lotti-wrapper
    sources:
      - type: git
        url: {{LOTTI_REPO_URL}}
        branch: fix/flatpak-kb-fix-v2
      - type: dir
        path: ../bundle
  - name: flutter-common
    buildsystem: simple
    build-commands:
      - install -D com.matthiasnehlsen.lotti.desktop /app/share/applications/com.matthiasnehlsen.lotti.desktop
      # Skip metainfo and icon for now to get basic functionality working
      # - install -D com.matthiasnehlsen.lotti.generated.metainfo.xml /app/share/metainfo/com.matthiasnehlsen.lotti.metainfo.xml
      # - install -D app_icon_1024.png /app/share/icons/hicolor/symbolic/apps/com.matthiasnehlsen.lotti.png
    sources:
      - type: file
        path: com.matthiasnehlsen.lotti.desktop
      # Skip metainfo and icon sources for now
      # - type: file
      #   path: com.matthiasnehlsen.lotti.generated.metainfo.xml
      # - type: file
      #   path: app_icon_1024.png
command: /app/lotti-wrapper
finish-args:
  - --share=network
  - --share=ipc
  - --socket=fallback-x11
  - --socket=wayland
  - --socket=pulseaudio
  # Secure filesystem permissions following principle of least privilege
  - --filesystem=xdg-documents:rw    # For importing/exporting journal data
  - --filesystem=xdg-pictures:ro     # For importing images into journal entries
  - --filesystem=xdg-download:rw     # For downloading/saving exports
  # App data is automatically available in ~/.var/app/com.matthiasnehlsen.lotti/
  - --device=dri
  # Add required libraries
  - --env=LD_LIBRARY_PATH=/app/lib
  # Add system library dependencies
  - --socket=x11
  - --socket=wayland
  # Removed --socket=gpg-agent (not needed unless app specifically uses GPG) 