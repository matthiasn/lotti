app-id: com.matthiasnehlsen.lotti
runtime: org.gnome.Platform
runtime-version: '45'
sdk: org.gnome.Sdk
modules:
  - name: desktop-drop-plugin
    buildsystem: simple
    build-commands:
      - install -D libdesktop_drop_plugin.so /app/lib/
    sources:
      - type: file
        path: ../lib/libdesktop_drop_plugin.so
  - name: rust
    buildsystem: simple
    build-commands:
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - export PATH="$HOME/.cargo/bin:$PATH"
      - rustc --version
      - cargo --version
    sources:
      - type: file
        url: https://sh.rustup.rs
        dest-filename: rustup.sh
  - name: keybinder
    buildsystem: simple
    build-commands:
      - install -D libkeybinder-3.0.so.0 /app/lib/ 2>/dev/null || echo "libkeybinder-3.0.so.0 not found"
    sources:
      - type: file
        path: ../libkeybinder-3.0.so.0
command: /app/lotti-wrapper
finish-args:
  - --share=network
  - --share=ipc
  - --socket=fallback-x11
  - --socket=wayland
  - --socket=pulseaudio
  # Secure filesystem permissions following principle of least privilege
  - --filesystem=xdg-documents:rw    # For importing/exporting journal data
  - --filesystem=xdg-pictures:ro     # For importing images into journal entries
  - --filesystem=xdg-download:rw     # For downloading/saving exports
  # App data is automatically available in ~/.var/app/com.matthiasnehlsen.lotti/
  - --device=dri
  # Add required libraries
  - --env=LD_LIBRARY_PATH=/app/lib
  # Add system library dependencies
  - --socket=x11
  - --socket=wayland
  # Removed --socket=gpg-agent (not needed unless app specifically uses GPG)
modules:
  - name: lotti
    buildsystem: simple
    build-options:
      strip: true
      no-debuginfo: true
    build-commands:
      - echo "Installing pre-built Flutter app..."
      - ls -la
      - cp lotti /app/
      - echo "Installing shared libraries..."
      - mkdir -p /app/lib
      - cp -r lib/* /app/lib/ 2>/dev/null || echo "No lib files to copy"
      - echo "Searching for .so files in project root:"
      - find . -name "*.so" -type f -exec cp {} /app/lib/ \; 2>/dev/null || echo "No .so files found"
      - echo "Creating wrapper script..."
      - echo '#!/bin/bash' > /app/lotti-wrapper
      - echo 'export LD_LIBRARY_PATH=/app/lib:$LD_LIBRARY_PATH' >> /app/lotti-wrapper
      - echo 'echo "Wrapper script running with LD_LIBRARY_PATH=$LD_LIBRARY_PATH"' >> /app/lotti-wrapper
      - echo 'ls -la /app/lib/ 2>/dev/null || echo "No lib directory"' >> /app/lotti-wrapper
      - echo 'exec /app/lotti "$@"' >> /app/lotti-wrapper
      - chmod +x /app/lotti-wrapper
      - echo "Wrapper script created:"
      - cat /app/lotti-wrapper
    sources:
      - type: git
        url: {{LOTTI_REPO_URL}}
        branch: fix/flatpak-kb-fix-v2
      - type: file
        path: ../lotti
      - type: dir
        path: ../lib
    modules:
      - name: flutter-common
        buildsystem: simple
        build-commands:
          - install -D com.matthiasnehlsen.lotti.desktop /app/share/applications/com.matthiasnehlsen.lotti.desktop
          # Skip metainfo and icon for now to get basic functionality working
          # - install -D com.matthiasnehlsen.lotti.generated.metainfo.xml /app/share/metainfo/com.matthiasnehlsen.lotti.metainfo.xml
          # - install -D app_icon_1024.png /app/share/icons/hicolor/symbolic/apps/com.matthiasnehlsen.lotti.png
        sources:
          - type: file
            path: com.matthiasnehlsen.lotti.desktop
          # Skip metainfo and icon sources for now
          # - type: file
          #   path: com.matthiasnehlsen.lotti.generated.metainfo.xml
          # - type: file
          #   path: app_icon_1024.png 