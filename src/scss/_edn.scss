// Slightly modified from https://github.com/kamituel/systems-toolbox-chrome

.edn-tree {
  .map {
    &:before, &:after {
      color: #ee2;
    }
  }

  .vector {
    &:before, &:after {
      color: #2e2;
    }
  }

  .seq {
    &:before, &:after {
      color: #800080;
    }
  }

  .string {
    color: #3ff;
  }

  .number {
    color: #c6f;
  }

  .keyword {
    color: #f88;
  }

  .nil {
    color: #ff0000;
  }

  .boolean {
    color: #f0f;
  }
}

.edn-tree.light {
  .map {
    &:before, &:after {
      color: #550;
    }
  }

  .vector {
    &:before, &:after {
      color: #282;
    }
  }

  .seq {
    &:before, &:after {
      color: #800080;
    }
  }

  .string {
    color: #399;
  }

  .number {
    color: #70a;
  }

  .keyword {
    color: #700;
  }

  .nil {
    color: #ff0000;
  }

  .boolean {
    color: #909;
  }
}


/* Layout */
.edn-tree {
  background-color: #ffffff;
  display: flex;
  flex-direction: column;
  font-size: 10px;

  &.full {
    padding: 25px 40px;
  }

  h2 {
    margin-top: 0;
  }

  .map {
    display: block;
    float: left;

    .key-val {
      display: block;
      float: left;

      &:not(:first-child) {
        clear: both;
        display: block;
        padding-left: 4px;
      }

      /* Map key */
      & > div:nth-child(1) {
        display: block;
        float: left;
        padding: 0 5px 0 5px;
      }

      /* Map value */
      & > div:nth-child(2) {
        display: inline-block;
      }
    }

    &:before {
      content: "{";
    }

    &:after {
      content: "}";
    }

    &:before, &:after {
      display: inline-flex;
      float: left;
    }
  }

  .vector {
    & > div {
      clear: both;
      display: inline-flex;
      float: left;
    }

    &:before {
      content: "[";
    }

    &:after {
      content: "]";
    }

    &:before, &:after {
      display: inline-flex;
      float: left;
    }
  }

  .seq {
    &:before {
      content: "(";
    }

    &:after {
      content: ")";
    }

    &:before, &:after {
      display: inline-flex;
      float: left;
    }
  }

  span {
    &.string {
      &:before, &:after {
        content: "\"";
      }
    }
  }

  .collapsed {
    cursor: pointer;

    & > .vector:before {
      content: "[...";
    }
  ;

    & > .map:before {
      content: "{...";
    }
  ;

    & > .seq:before {
      content: "(...";
    }
  ;
  }

  .collapsed:hover {
    & > .vector:before, & > .vector:after,
    & > .map:before, & > .map:before,
    & > .seq:before, & > .seq:before {
      text-decoration: underline;
    }
  }
}
